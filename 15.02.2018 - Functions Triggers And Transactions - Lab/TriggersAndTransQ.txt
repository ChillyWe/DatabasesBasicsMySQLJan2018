#1
USE soft_uni;

SELECT 
    e.employee_id, e.job_title, a.address_id, a.address_text
FROM
    employees AS e
        JOIN
    addresses AS a ON e.address_id = a.address_id
ORDER BY e.address_id ASC
LIMIT 5;

#2
SELECT 
    e.first_name, e.last_name, t.name, a.address_text
FROM
    employees AS e
        JOIN
    addresses AS a ON e.address_id = a.address_id
        JOIN
    towns AS t ON a.town_id = t.town_id
ORDER BY e.first_name ASC , last_name ASC
LIMIT 5;

#3
SELECT 
    e.employee_id, e.first_name, e.last_name, d.name
FROM
    employees AS e
        JOIN
    departments AS d ON d.department_id = e.department_id
WHERE
    d.name = 'Sales'
ORDER BY e.employee_id DESC;

#4
SELECT 
    e.employee_id, e.first_name, e.salary, d.name
FROM
    employees AS e
        JOIN
    departments AS d ON d.department_id = e.department_id
WHERE
    e.salary > 15000
ORDER BY e.department_id DESC
limit 5;

#5
SELECT 
    e.employee_id, e.first_name
FROM
    employees AS e
        LEFT JOIN
    employees_projects AS ep ON ep.employee_id = e.employee_id
WHERE
    ep.project_id IS NULL
ORDER BY e.employee_id DESC
LIMIT 3;

#6
SELECT 
    e.first_name, e.last_name, e.hire_date, d.name
FROM
    employees AS e
        JOIN
    departments AS d ON d.department_id = e.department_id
        AND (d.name = 'Sales' OR d.name = 'Finance')
WHERE
    DATE(e.hire_date) > '1999-01-01'
ORDER BY e.hire_date ASC;

#7
SELECT 
    e.employee_id, e.first_name, p.name
FROM
    employees AS e
        JOIN
    employees_projects AS ep ON ep.employee_id = e.employee_id
        JOIN
    projects AS p ON p.project_id = ep.project_id
        AND DATE(p.start_date) > '2002-08-13'
        AND p.end_date IS NULL
ORDER BY e.first_name , p.name
LIMIT 5;

#8
SELECT 
    e.employee_id, 
    e.first_name, 
		CASE
      WHEN YEAR (p.start_date) >= 2005 
	  THEN p.name = NULL
      ELSE p.name
      END AS project_name
FROM
    employees AS e
        JOIN
    employees_projects AS ep ON ep.employee_id = e.employee_id
    and ep.employee_id = 24
        JOIN
    projects AS p ON p.project_id = ep.project_id
ORDER BY p.name;

#9
SELECT 
    e.employee_id,
    e.first_name,
    emp.employee_id AS manager_id,
    emp.first_name AS manager_name
FROM
    employees AS e
        JOIN
    employees AS emp ON e.manager_id = emp.employee_id
        where e.manager_id IN (3, 7)
ORDER BY e.first_name;

#10
SELECT 
    e.employee_id,
    CONCAT_WS(' ', e.first_name, e.last_name) AS 'emloyee_name',
    CONCAT_WS(' ', emp.first_name, emp.last_name) AS 'manager_name',
    d.name
FROM
    employees AS e
        JOIN
    employees AS emp ON e.manager_id = emp.employee_id
        JOIN
    departments AS d ON e.department_id = d.department_id
ORDER BY employee_id
LIMIT 5;

#11
SELECT 
    AVG(e.salary) AS 'min_average_salary'
FROM
    employees AS e
GROUP BY e.department_id
ORDER BY AVG(e.salary)
limit 1;
	
#12
USE geography;

SELECT 
	mc.country_code,
    m.mountain_range, 
    p.peak_name, 
    p.elevation
FROM
    peaks AS p
        JOIN
    mountains AS m ON m.id = p.mountain_id
        JOIN
    mountains_countries AS mc ON mc.mountain_id = m.id
WHERE
    mc.country_code = 'BG'
        AND p.elevation > 2835
ORDER BY p.elevation DESC;

#13
SELECT 
    country_code, COUNT(m.id) AS mountain_range
FROM
    mountains_countries AS mc
        LEFT JOIN
    mountains AS m ON mc.mountain_id = m.id
WHERE
    country_code IN ('BG' , 'RU', 'US')
GROUP BY country_code
HAVING mountain_range > 0
ORDER BY mountain_range DESC;

#14
SELECT 
    c.country_name, r.river_name
FROM
    countries AS c
        LEFT JOIN
    countries_rivers AS cr ON cr.country_code = c.country_code
        LEFT JOIN
    rivers AS r ON r.id = cr.river_id
        JOIN
    continents AS con ON con.continent_code = c.continent_code
        AND con.continent_code = 'AF'
ORDER BY c.country_name
LIMIT 5;

#15




#16
USE geography;

SELECT 
    COUNT(c.country_code) - COUNT(mountain_id) AS 'country_count'
FROM
    mountains AS m
        RIGHT JOIN
    mountains_countries AS mc ON m.id = mc.mountain_id
        RIGHT JOIN
    countries AS c ON mc.country_code = c.country_code;

#17
SELECT 
    c.country_name,
    MAX(p.elevation) AS `highest_peak_elevation`,
    MAX(r.length) AS `longest_river_length`
FROM
    countries AS c
        LEFT JOIN
    mountains_countries AS mc ON mc.country_code = c.country_code
        LEFT JOIN
    mountains AS m ON m.id = mc.mountain_id
        LEFT JOIN
    peaks AS p ON p.mountain_id = m.id
        LEFT JOIN
    countries_rivers AS cr ON cr.country_code = c.country_code
        LEFT JOIN
    rivers AS r ON r.id = cr.river_id
GROUP BY c.country_name
ORDER BY highest_peak_elevation DESC , longest_river_length DESC , c.country_name
LIMIT 5;


